{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Task Management System\\\\frontend\\\\src\\\\pages\\\\TaskList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Grid, CircularProgress, Chip, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, FormControl, InputLabel, Select, MenuItem, TextField, InputAdornment } from '@mui/material';\nimport { Add as AddIcon, Search as SearchIcon, Check as CheckIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { useTask } from '../context/TaskContext';\nimport { useAuth } from '../context/AuthContext';\nconst TaskList = () => {\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const {\n    tasks,\n    loading,\n    fetchTasks\n  } = useTask();\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [filters, setFilters] = useState({\n    status: '',\n    priority: '',\n    search: ''\n  });\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  // Apply filters to tasks\n  useEffect(() => {\n    if (!tasks) return;\n    let result = [...tasks];\n\n    // Filter by status\n    if (filters.status) {\n      result = result.filter(task => task.status === filters.status);\n    }\n\n    // Filter by priority\n    if (filters.priority) {\n      result = result.filter(task => task.priority === filters.priority);\n    }\n\n    // Filter by search term (title or description)\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      result = result.filter(task => task.title.toLowerCase().includes(searchTerm) || task.description && task.description.toLowerCase().includes(searchTerm));\n    }\n    setFilteredTasks(result);\n  }, [tasks, filters]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setPage(0); // Reset to first page when filters change\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Completed':\n        return 'success';\n      case 'In Progress':\n        return 'info';\n      case 'To-Do':\n      default:\n        return 'default';\n    }\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return 'error';\n      case 'Medium':\n        return 'warning';\n      case 'Low':\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      py: 4,\n      px: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mb: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"All Tasks\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 32\n      }\n    }),\n    onClick: () => navigate('/tasks/new'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"New Task\")), /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 2,\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"search\",\n    value: filters.search,\n    onChange: handleFilterChange,\n    placeholder: \"Search tasks...\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 41\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 4,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    size: \"small\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"status\",\n    value: filters.status,\n    onChange: handleFilterChange,\n    label: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"To-Do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"To-Do\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"In Progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, \"Completed\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 4,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    size: \"small\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, \"Priority\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"priority\",\n    value: filters.priority,\n    onChange: handleFilterChange,\n    label: \"Priority\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Low\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"High\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"High\")))))), loading ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    py: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, filteredTasks.length > 0 ? /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"tasks table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 45\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 45\n    }\n  }, \"Project\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 45\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 45\n    }\n  }, \"Priority\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 45\n    }\n  }, \"Assignee\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 45\n    }\n  }, \"Due Date\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, filteredTasks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(task => {\n    var _task$project, _task$assignee;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: task._id,\n      hover: true,\n      onClick: () => navigate(`/tasks/${task._id}`),\n      sx: {\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 57\n      }\n    }, task.status === 'Completed' && /*#__PURE__*/React.createElement(CheckIcon, {\n      color: \"success\",\n      fontSize: \"small\",\n      sx: {\n        mr: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 65\n      }\n    }), task.title)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 53\n      }\n    }, ((_task$project = task.project) === null || _task$project === void 0 ? void 0 : _task$project.name) || 'No Project'), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: task.status,\n      color: getStatusColor(task.status),\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: task.priority,\n      color: getPriorityColor(task.priority),\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 53\n      }\n    }, ((_task$assignee = task.assignee) === null || _task$assignee === void 0 ? void 0 : _task$assignee.name) || 'Unassigned'), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 53\n      }\n    }, task.dueDate ? format(new Date(task.dueDate), 'MMM d, yyyy') : 'No date'));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: filteredTasks.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 4,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, \"No tasks found\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, tasks.length === 0 ? \"You don't have any tasks yet. Create your first task to get started.\" : \"No tasks match your current filters. Try adjusting your search criteria.\"), tasks.length === 0 && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => navigate('/tasks/new'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, \"Create First Task\"))));\n};\nexport default TaskList;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Box","Typography","Button","Grid","CircularProgress","Chip","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","FormControl","InputLabel","Select","MenuItem","TextField","InputAdornment","Add","AddIcon","Search","SearchIcon","Check","CheckIcon","format","useTask","useAuth","TaskList","navigate","user","tasks","loading","fetchTasks","filteredTasks","setFilteredTasks","page","setPage","rowsPerPage","setRowsPerPage","filters","setFilters","status","priority","search","result","filter","task","searchTerm","toLowerCase","title","includes","description","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleFilterChange","e","name","prev","getStatusColor","getPriorityColor","createElement","sx","py","px","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","mb","variant","component","color","startIcon","onClick","p","container","spacing","item","xs","sm","md","onChange","placeholder","fullWidth","size","InputProps","startAdornment","position","label","Fragment","length","slice","map","_task$project","_task$assignee","key","_id","hover","cursor","fontSize","mr","project","assignee","dueDate","Date","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","textAlign","gutterBottom","paragraph"],"sources":["C:/Users/Admin/Downloads/Task Management System/frontend/src/pages/TaskList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    Grid,\r\n    CircularProgress,\r\n    Chip,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TablePagination,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    TextField,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Search as SearchIcon,\r\n    Check as CheckIcon\r\n} from '@mui/icons-material';\r\nimport { format } from 'date-fns';\r\n\r\nimport { useTask } from '../context/TaskContext';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst TaskList = () => {\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    const { tasks, loading, fetchTasks } = useTask();\r\n\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [filters, setFilters] = useState({\r\n        status: '',\r\n        priority: '',\r\n        search: ''\r\n    });\r\n\r\n    // Fetch tasks on component mount\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [fetchTasks]);\r\n\r\n    // Apply filters to tasks\r\n    useEffect(() => {\r\n        if (!tasks) return;\r\n\r\n        let result = [...tasks];\r\n\r\n        // Filter by status\r\n        if (filters.status) {\r\n            result = result.filter(task => task.status === filters.status);\r\n        }\r\n\r\n        // Filter by priority\r\n        if (filters.priority) {\r\n            result = result.filter(task => task.priority === filters.priority);\r\n        }\r\n\r\n        // Filter by search term (title or description)\r\n        if (filters.search) {\r\n            const searchTerm = filters.search.toLowerCase();\r\n            result = result.filter(task =>\r\n                task.title.toLowerCase().includes(searchTerm) ||\r\n                (task.description && task.description.toLowerCase().includes(searchTerm))\r\n            );\r\n        }\r\n\r\n        setFilteredTasks(result);\r\n    }, [tasks, filters]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        setPage(0); // Reset to first page when filters change\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'Completed': return 'success';\r\n            case 'In Progress': return 'info';\r\n            case 'To-Do': default: return 'default';\r\n        }\r\n    };\r\n\r\n    const getPriorityColor = (priority) => {\r\n        switch (priority) {\r\n            case 'High': return 'error';\r\n            case 'Medium': return 'warning';\r\n            case 'Low': return 'success';\r\n            default: return 'default';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ py: 4, px: 2 }}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={4}>\r\n                <Typography variant=\"h4\" component=\"h1\">\r\n                    All Tasks\r\n                </Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={() => navigate('/tasks/new')}\r\n                >\r\n                    New Task\r\n                </Button>\r\n            </Box>\r\n\r\n            {/* Filters */}\r\n            <Paper sx={{ p: 2, mb: 3 }}>\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item xs={12} sm={4} md={3}>\r\n                        <TextField\r\n                            name=\"search\"\r\n                            value={filters.search}\r\n                            onChange={handleFilterChange}\r\n                            placeholder=\"Search tasks...\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} md={2}>\r\n                        <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                            <InputLabel>Status</InputLabel>\r\n                            <Select\r\n                                name=\"status\"\r\n                                value={filters.status}\r\n                                onChange={handleFilterChange}\r\n                                label=\"Status\"\r\n                            >\r\n                                <MenuItem value=\"\">All</MenuItem>\r\n                                <MenuItem value=\"To-Do\">To-Do</MenuItem>\r\n                                <MenuItem value=\"In Progress\">In Progress</MenuItem>\r\n                                <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} md={2}>\r\n                        <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                            <InputLabel>Priority</InputLabel>\r\n                            <Select\r\n                                name=\"priority\"\r\n                                value={filters.priority}\r\n                                onChange={handleFilterChange}\r\n                                label=\"Priority\"\r\n                            >\r\n                                <MenuItem value=\"\">All</MenuItem>\r\n                                <MenuItem value=\"Low\">Low</MenuItem>\r\n                                <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                                <MenuItem value=\"High\">High</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {loading ? (\r\n                <Box display=\"flex\" justifyContent=\"center\" py={4}>\r\n                    <CircularProgress />\r\n                </Box>\r\n            ) : (\r\n                <>\r\n                    {filteredTasks.length > 0 ? (\r\n                        <Paper>\r\n                            <TableContainer>\r\n                                <Table aria-label=\"tasks table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Title</TableCell>\r\n                                            <TableCell>Project</TableCell>\r\n                                            <TableCell>Status</TableCell>\r\n                                            <TableCell>Priority</TableCell>\r\n                                            <TableCell>Assignee</TableCell>\r\n                                            <TableCell>Due Date</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {filteredTasks\r\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            .map((task) => (\r\n                                                <TableRow\r\n                                                    key={task._id}\r\n                                                    hover\r\n                                                    onClick={() => navigate(`/tasks/${task._id}`)}\r\n                                                    sx={{ cursor: 'pointer' }}\r\n                                                >\r\n                                                    <TableCell>\r\n                                                        <Box display=\"flex\" alignItems=\"center\">\r\n                                                            {task.status === 'Completed' && (\r\n                                                                <CheckIcon color=\"success\" fontSize=\"small\" sx={{ mr: 1 }} />\r\n                                                            )}\r\n                                                            {task.title}\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell>{task.project?.name || 'No Project'}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={task.status}\r\n                                                            color={getStatusColor(task.status)}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={task.priority}\r\n                                                            color={getPriorityColor(task.priority)}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                    <TableCell>{task.assignee?.name || 'Unassigned'}</TableCell>\r\n                                                    <TableCell>\r\n                                                        {task.dueDate ? format(new Date(task.dueDate), 'MMM d, yyyy') : 'No date'}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                component=\"div\"\r\n                                count={filteredTasks.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n                        </Paper>\r\n                    ) : (\r\n                        <Paper sx={{ p: 4, textAlign: 'center' }}>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n                                No tasks found\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                                {tasks.length === 0\r\n                                    ? \"You don't have any tasks yet. Create your first task to get started.\"\r\n                                    : \"No tasks match your current filters. Try adjusting your search criteria.\"}\r\n                            </Typography>\r\n                            {tasks.length === 0 && (\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<AddIcon />}\r\n                                    onClick={() => navigate('/tasks/new')}\r\n                                >\r\n                                    Create First Task\r\n                                </Button>\r\n                            )}\r\n                        </Paper>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default TaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}