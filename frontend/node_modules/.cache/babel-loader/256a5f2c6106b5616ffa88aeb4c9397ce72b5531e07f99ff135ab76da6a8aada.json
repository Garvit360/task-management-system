{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Task Management System\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Grid, Typography, Paper, Button, Divider, List, ListItem, ListItemText, ListItemIcon, CircularProgress, Card, CardContent, CardHeader, Avatar } from '@mui/material';\nimport { Add as AddIcon, Assignment as TaskIcon, Folder as ProjectIcon, CheckCircle as CompletedIcon, Pending as PendingIcon, Schedule as ScheduleIcon } from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport { useProject } from '../context/ProjectContext';\nimport { useTask } from '../context/TaskContext';\nimport TaskCard from '../components/task/TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const {\n    projects,\n    fetchProjects,\n    loading: projectsLoading\n  } = useProject();\n  const {\n    tasks,\n    fetchTasksByUser,\n    loading: tasksLoading\n  } = useTask();\n  const [stats, setStats] = useState({\n    totalProjects: 0,\n    totalTasks: 0,\n    completedTasks: 0,\n    pendingTasks: 0,\n    upcomingTasks: 0\n  });\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchProjects();\n    if (user !== null && user !== void 0 && user._id) {\n      fetchTasksByUser(user._id);\n    }\n  }, [fetchProjects, fetchTasksByUser, user]);\n\n  // Calculate stats when data changes\n  useEffect(() => {\n    if (projects && tasks) {\n      const now = new Date();\n      const oneWeekFromNow = new Date();\n      oneWeekFromNow.setDate(now.getDate() + 7);\n      const completedTasks = tasks.filter(task => task.status === 'Completed').length;\n      const pendingTasks = tasks.filter(task => task.status !== 'Completed').length;\n      const upcomingTasks = tasks.filter(task => {\n        const dueDate = new Date(task.dueDate);\n        return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\n      }).length;\n      setStats({\n        totalProjects: projects.length,\n        totalTasks: tasks.length,\n        completedTasks,\n        pendingTasks,\n        upcomingTasks\n      });\n    }\n  }, [projects, tasks]);\n\n  // Handle create project button click\n  const handleCreateProject = () => {\n    navigate('/projects/new');\n  };\n\n  // Handle create task button click\n  const handleCreateTask = () => {\n    navigate('/tasks/new');\n  };\n\n  // Loading state\n  const isLoading = projectsLoading || tasksLoading;\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || 'User', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Here's an overview of your tasks and projects.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'primary.main',\n              mr: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(ProjectIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: stats.totalProjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Total Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'success.main',\n              mr: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CompletedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: stats.completedTasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Completed Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'warning.main',\n              mr: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(PendingIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: stats.pendingTasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Pending Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"My Recent Tasks\",\n            action: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"small\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 48\n              }, this),\n              onClick: handleCreateTask,\n              children: \"New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 0\n            },\n            children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 3,\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: \"You don't have any tasks yet.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 52\n                }, this),\n                sx: {\n                  mt: 2\n                },\n                onClick: handleCreateTask,\n                children: \"Create Your First Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2\n              },\n              children: [tasks.slice(0, 5).map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n                task: task\n              }, task._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this)), tasks.length > 5 && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  onClick: () => navigate('/tasks'),\n                  children: \"View All Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"My Projects\",\n            action: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"small\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 48\n              }, this),\n              onClick: handleCreateProject,\n              children: \"New Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 0\n            },\n            children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 3,\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: \"You don't have any projects yet.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 52\n                }, this),\n                sx: {\n                  mt: 2\n                },\n                onClick: handleCreateProject,\n                children: \"Create Your First Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              children: [projects.slice(0, 5).map(project => {\n                var _project$members;\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    button: true,\n                    onClick: () => navigate(`/projects/${project._id}`),\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(ProjectIcon, {\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: project.name,\n                      secondary: `${((_project$members = project.members) === null || _project$members === void 0 ? void 0 : _project$members.length) || 0} members`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    component: \"li\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 45\n                  }, this)]\n                }, project._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this);\n              }), projects.length > 5 && /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: () => navigate('/projects'),\n                sx: {\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"View All Projects\",\n                  primaryTypographyProps: {\n                    color: 'primary'\n                  },\n                  sx: {\n                    textAlign: 'center'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Upcoming Deadlines\",\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: 'error.main'\n              },\n              children: /*#__PURE__*/_jsxDEV(ScheduleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 0\n            },\n            children: stats.upcomingTasks === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 3,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                children: \"No upcoming deadlines this week.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              children: tasks.filter(task => {\n                const now = new Date();\n                const oneWeekFromNow = new Date();\n                oneWeekFromNow.setDate(now.getDate() + 7);\n                const dueDate = new Date(task.dueDate);\n                return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\n              }).slice(0, 5).map(task => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  onClick: () => navigate(`/tasks/${task._id}`),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(TaskIcon, {\n                      color: \"error\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: task.title,\n                    secondary: `Due: ${new Date(task.dueDate).toLocaleDateString()}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 49\n                }, this)]\n              }, task._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"V/xQ88Yln8zWvA55pncAtqSWGdo=\", false, function () {\n  return [useNavigate, useAuth, useProject, useTask];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Box","Grid","Typography","Paper","Button","Divider","List","ListItem","ListItemText","ListItemIcon","CircularProgress","Card","CardContent","CardHeader","Avatar","Add","AddIcon","Assignment","TaskIcon","Folder","ProjectIcon","CheckCircle","CompletedIcon","Pending","PendingIcon","Schedule","ScheduleIcon","useAuth","useProject","useTask","TaskCard","jsxDEV","_jsxDEV","Dashboard","_s","navigate","user","projects","fetchProjects","loading","projectsLoading","tasks","fetchTasksByUser","tasksLoading","stats","setStats","totalProjects","totalTasks","completedTasks","pendingTasks","upcomingTasks","_id","now","Date","oneWeekFromNow","setDate","getDate","filter","task","status","length","dueDate","handleCreateProject","handleCreateTask","isLoading","sx","display","justifyContent","p","children","fileName","_jsxFileName","lineNumber","columnNumber","mb","variant","gutterBottom","name","color","container","spacing","item","xs","sm","md","alignItems","bgcolor","mr","title","action","size","startIcon","onClick","textAlign","mt","slice","map","project","_project$members","Fragment","button","primary","secondary","members","component","primaryTypographyProps","avatar","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/Task Management System/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    Paper,\r\n    Button,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    CircularProgress,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Avatar\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Assignment as TaskIcon,\r\n    Folder as ProjectIcon,\r\n    CheckCircle as CompletedIcon,\r\n    Pending as PendingIcon,\r\n    Schedule as ScheduleIcon\r\n} from '@mui/icons-material';\r\n\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useProject } from '../context/ProjectContext';\r\nimport { useTask } from '../context/TaskContext';\r\nimport TaskCard from '../components/task/TaskCard';\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    const { projects, fetchProjects, loading: projectsLoading } = useProject();\r\n    const { tasks, fetchTasksByUser, loading: tasksLoading } = useTask();\r\n    const [stats, setStats] = useState({\r\n        totalProjects: 0,\r\n        totalTasks: 0,\r\n        completedTasks: 0,\r\n        pendingTasks: 0,\r\n        upcomingTasks: 0\r\n    });\r\n\r\n    // Fetch data on component mount\r\n    useEffect(() => {\r\n        fetchProjects();\r\n        if (user?._id) {\r\n            fetchTasksByUser(user._id);\r\n        }\r\n    }, [fetchProjects, fetchTasksByUser, user]);\r\n\r\n    // Calculate stats when data changes\r\n    useEffect(() => {\r\n        if (projects && tasks) {\r\n            const now = new Date();\r\n            const oneWeekFromNow = new Date();\r\n            oneWeekFromNow.setDate(now.getDate() + 7);\r\n\r\n            const completedTasks = tasks.filter(task => task.status === 'Completed').length;\r\n            const pendingTasks = tasks.filter(task => task.status !== 'Completed').length;\r\n            const upcomingTasks = tasks.filter(task => {\r\n                const dueDate = new Date(task.dueDate);\r\n                return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\r\n            }).length;\r\n\r\n            setStats({\r\n                totalProjects: projects.length,\r\n                totalTasks: tasks.length,\r\n                completedTasks,\r\n                pendingTasks,\r\n                upcomingTasks\r\n            });\r\n        }\r\n    }, [projects, tasks]);\r\n\r\n    // Handle create project button click\r\n    const handleCreateProject = () => {\r\n        navigate('/projects/new');\r\n    };\r\n\r\n    // Handle create task button click\r\n    const handleCreateTask = () => {\r\n        navigate('/tasks/new');\r\n    };\r\n\r\n    // Loading state\r\n    const isLoading = projectsLoading || tasksLoading;\r\n    if (isLoading) {\r\n        return (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ mb: 4 }}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Welcome, {user?.name || 'User'}!\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    Here's an overview of your tasks and projects.\r\n                </Typography>\r\n            </Box>\r\n\r\n            {/* Stats Cards */}\r\n            <Grid container spacing={3} sx={{ mb: 4 }}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Paper sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ bgcolor: 'primary.main', mr: 2 }}>\r\n                            <ProjectIcon />\r\n                        </Avatar>\r\n                        <Box>\r\n                            <Typography variant=\"h5\">{stats.totalProjects}</Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Total Projects\r\n                            </Typography>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Paper sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ bgcolor: 'success.main', mr: 2 }}>\r\n                            <CompletedIcon />\r\n                        </Avatar>\r\n                        <Box>\r\n                            <Typography variant=\"h5\">{stats.completedTasks}</Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Completed Tasks\r\n                            </Typography>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Paper sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ bgcolor: 'warning.main', mr: 2 }}>\r\n                            <PendingIcon />\r\n                        </Avatar>\r\n                        <Box>\r\n                            <Typography variant=\"h5\">{stats.pendingTasks}</Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Pending Tasks\r\n                            </Typography>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n                {/* Recent Tasks */}\r\n                <Grid item xs={12} md={7}>\r\n                    <Card>\r\n                        <CardHeader\r\n                            title=\"My Recent Tasks\"\r\n                            action={\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    size=\"small\"\r\n                                    startIcon={<AddIcon />}\r\n                                    onClick={handleCreateTask}\r\n                                >\r\n                                    New Task\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        <Divider />\r\n                        <CardContent sx={{ p: 0 }}>\r\n                            {tasks.length === 0 ? (\r\n                                <Box sx={{ p: 3, textAlign: 'center' }}>\r\n                                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                        You don't have any tasks yet.\r\n                                    </Typography>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        startIcon={<AddIcon />}\r\n                                        sx={{ mt: 2 }}\r\n                                        onClick={handleCreateTask}\r\n                                    >\r\n                                        Create Your First Task\r\n                                    </Button>\r\n                                </Box>\r\n                            ) : (\r\n                                <Box sx={{ p: 2 }}>\r\n                                    {tasks.slice(0, 5).map(task => (\r\n                                        <TaskCard key={task._id} task={task} />\r\n                                    ))}\r\n                                    {tasks.length > 5 && (\r\n                                        <Box sx={{ textAlign: 'center', mt: 2 }}>\r\n                                            <Button\r\n                                                variant=\"text\"\r\n                                                onClick={() => navigate('/tasks')}\r\n                                            >\r\n                                                View All Tasks\r\n                                            </Button>\r\n                                        </Box>\r\n                                    )}\r\n                                </Box>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                {/* Projects and Upcoming Tasks */}\r\n                <Grid item xs={12} md={5}>\r\n                    {/* Recent Projects */}\r\n                    <Card sx={{ mb: 3 }}>\r\n                        <CardHeader\r\n                            title=\"My Projects\"\r\n                            action={\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    size=\"small\"\r\n                                    startIcon={<AddIcon />}\r\n                                    onClick={handleCreateProject}\r\n                                >\r\n                                    New Project\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        <Divider />\r\n                        <CardContent sx={{ p: 0 }}>\r\n                            {projects.length === 0 ? (\r\n                                <Box sx={{ p: 3, textAlign: 'center' }}>\r\n                                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                        You don't have any projects yet.\r\n                                    </Typography>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        startIcon={<AddIcon />}\r\n                                        sx={{ mt: 2 }}\r\n                                        onClick={handleCreateProject}\r\n                                    >\r\n                                        Create Your First Project\r\n                                    </Button>\r\n                                </Box>\r\n                            ) : (\r\n                                <List>\r\n                                    {projects.slice(0, 5).map(project => (\r\n                                        <React.Fragment key={project._id}>\r\n                                            <ListItem\r\n                                                button\r\n                                                onClick={() => navigate(`/projects/${project._id}`)}\r\n                                            >\r\n                                                <ListItemIcon>\r\n                                                    <ProjectIcon color=\"primary\" />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={project.name}\r\n                                                    secondary={`${project.members?.length || 0} members`}\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider component=\"li\" />\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                    {projects.length > 5 && (\r\n                                        <ListItem\r\n                                            button\r\n                                            onClick={() => navigate('/projects')}\r\n                                            sx={{ justifyContent: 'center' }}\r\n                                        >\r\n                                            <ListItemText\r\n                                                primary=\"View All Projects\"\r\n                                                primaryTypographyProps={{ color: 'primary' }}\r\n                                                sx={{ textAlign: 'center' }}\r\n                                            />\r\n                                        </ListItem>\r\n                                    )}\r\n                                </List>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    {/* Upcoming Tasks */}\r\n                    <Card>\r\n                        <CardHeader\r\n                            title=\"Upcoming Deadlines\"\r\n                            avatar={\r\n                                <Avatar sx={{ bgcolor: 'error.main' }}>\r\n                                    <ScheduleIcon />\r\n                                </Avatar>\r\n                            }\r\n                        />\r\n                        <Divider />\r\n                        <CardContent sx={{ p: 0 }}>\r\n                            {stats.upcomingTasks === 0 ? (\r\n                                <Box sx={{ p: 3, textAlign: 'center' }}>\r\n                                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                        No upcoming deadlines this week.\r\n                                    </Typography>\r\n                                </Box>\r\n                            ) : (\r\n                                <List>\r\n                                    {tasks\r\n                                        .filter(task => {\r\n                                            const now = new Date();\r\n                                            const oneWeekFromNow = new Date();\r\n                                            oneWeekFromNow.setDate(now.getDate() + 7);\r\n                                            const dueDate = new Date(task.dueDate);\r\n                                            return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\r\n                                        })\r\n                                        .slice(0, 5)\r\n                                        .map(task => (\r\n                                            <React.Fragment key={task._id}>\r\n                                                <ListItem\r\n                                                    button\r\n                                                    onClick={() => navigate(`/tasks/${task._id}`)}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <TaskIcon color=\"error\" />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText\r\n                                                        primary={task.title}\r\n                                                        secondary={`Due: ${new Date(task.dueDate).toLocaleDateString()}`}\r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider component=\"li\" />\r\n                                            </React.Fragment>\r\n                                        ))}\r\n                                </List>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}