{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Task Management System\\\\frontend\\\\src\\\\pages\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Grid, CircularProgress, Chip, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, FormControl, InputLabel, Select, MenuItem, TextField, InputAdornment } from '@mui/material';\nimport { Add as AddIcon, Search as SearchIcon, Check as CheckIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { useTask } from '../context/TaskContext';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const {\n    tasks,\n    loading,\n    fetchTasks\n  } = useTask();\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [filters, setFilters] = useState({\n    status: '',\n    priority: '',\n    search: ''\n  });\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  // Apply filters to tasks\n  useEffect(() => {\n    if (!tasks) return;\n    let result = [...tasks];\n\n    // Filter by status\n    if (filters.status) {\n      result = result.filter(task => task.status === filters.status);\n    }\n\n    // Filter by priority\n    if (filters.priority) {\n      result = result.filter(task => task.priority === filters.priority);\n    }\n\n    // Filter by search term (title or description)\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      result = result.filter(task => task.title.toLowerCase().includes(searchTerm) || task.description && task.description.toLowerCase().includes(searchTerm));\n    }\n    setFilteredTasks(result);\n  }, [tasks, filters]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setPage(0); // Reset to first page when filters change\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Completed':\n        return 'success';\n      case 'In Progress':\n        return 'info';\n      case 'To-Do':\n      default:\n        return 'default';\n    }\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return 'error';\n      case 'Medium':\n        return 'warning';\n      case 'Low':\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4,\n      px: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"All Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 32\n        }, this),\n        onClick: () => navigate('/tasks/new'),\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"search\",\n            value: filters.search,\n            onChange: handleFilterChange,\n            placeholder: \"Search tasks...\",\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            size: \"small\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: filters.status,\n              onChange: handleFilterChange,\n              label: \"Status\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"To-Do\",\n                children: \"To-Do\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            size: \"small\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"priority\",\n              value: filters.priority,\n              onChange: handleFilterChange,\n              label: \"Priority\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      py: 4,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: filteredTasks.length > 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"tasks table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Assignee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: filteredTasks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(task => {\n                var _task$project, _task$assignee;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: () => navigate(`/tasks/${task._id}`),\n                  sx: {\n                    cursor: 'pointer'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      children: [task.status === 'Completed' && /*#__PURE__*/_jsxDEV(CheckIcon, {\n                        color: \"success\",\n                        fontSize: \"small\",\n                        sx: {\n                          mr: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 65\n                      }, this), task.title]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: ((_task$project = task.project) === null || _task$project === void 0 ? void 0 : _task$project.name) || 'No Project'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: task.status,\n                      color: getStatusColor(task.status),\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: task.priority,\n                      color: getPriorityColor(task.priority),\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: ((_task$assignee = task.assignee) === null || _task$assignee === void 0 ? void 0 : _task$assignee.name) || 'Unassigned'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: task.dueDate ? format(new Date(task.dueDate), 'MMM d, yyyy') : 'No date'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 53\n                  }, this)]\n                }, task._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: filteredTasks.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"No tasks found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          paragraph: true,\n          children: tasks.length === 0 ? \"You don't have any tasks yet. Create your first task to get started.\" : \"No tasks match your current filters. Try adjusting your search criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }, this), tasks.length === 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 48\n          }, this),\n          onClick: () => navigate('/tasks/new'),\n          children: \"Create First Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"HJXRZHwk7tgUf6yk8kiuTK4ZmB8=\", false, function () {\n  return [useNavigate, useAuth, useTask];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Box","Typography","Button","Grid","CircularProgress","Chip","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","FormControl","InputLabel","Select","MenuItem","TextField","InputAdornment","Add","AddIcon","Search","SearchIcon","Check","CheckIcon","format","useTask","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","navigate","user","tasks","loading","fetchTasks","filteredTasks","setFilteredTasks","page","setPage","rowsPerPage","setRowsPerPage","filters","setFilters","status","priority","search","result","filter","task","searchTerm","toLowerCase","title","includes","description","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleFilterChange","e","name","prev","getStatusColor","getPriorityColor","sx","py","px","children","display","justifyContent","alignItems","mb","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","startIcon","onClick","p","container","spacing","item","xs","sm","md","onChange","placeholder","fullWidth","size","InputProps","startAdornment","position","label","length","slice","map","_task$project","_task$assignee","hover","_id","cursor","fontSize","mr","project","assignee","dueDate","Date","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","textAlign","gutterBottom","paragraph","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/Task Management System/frontend/src/pages/TaskList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    Grid,\r\n    CircularProgress,\r\n    Chip,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TablePagination,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    TextField,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Search as SearchIcon,\r\n    Check as CheckIcon\r\n} from '@mui/icons-material';\r\nimport { format } from 'date-fns';\r\n\r\nimport { useTask } from '../context/TaskContext';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst TaskList = () => {\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    const { tasks, loading, fetchTasks } = useTask();\r\n\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [filters, setFilters] = useState({\r\n        status: '',\r\n        priority: '',\r\n        search: ''\r\n    });\r\n\r\n    // Fetch tasks on component mount\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [fetchTasks]);\r\n\r\n    // Apply filters to tasks\r\n    useEffect(() => {\r\n        if (!tasks) return;\r\n\r\n        let result = [...tasks];\r\n\r\n        // Filter by status\r\n        if (filters.status) {\r\n            result = result.filter(task => task.status === filters.status);\r\n        }\r\n\r\n        // Filter by priority\r\n        if (filters.priority) {\r\n            result = result.filter(task => task.priority === filters.priority);\r\n        }\r\n\r\n        // Filter by search term (title or description)\r\n        if (filters.search) {\r\n            const searchTerm = filters.search.toLowerCase();\r\n            result = result.filter(task =>\r\n                task.title.toLowerCase().includes(searchTerm) ||\r\n                (task.description && task.description.toLowerCase().includes(searchTerm))\r\n            );\r\n        }\r\n\r\n        setFilteredTasks(result);\r\n    }, [tasks, filters]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        setPage(0); // Reset to first page when filters change\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'Completed': return 'success';\r\n            case 'In Progress': return 'info';\r\n            case 'To-Do': default: return 'default';\r\n        }\r\n    };\r\n\r\n    const getPriorityColor = (priority) => {\r\n        switch (priority) {\r\n            case 'High': return 'error';\r\n            case 'Medium': return 'warning';\r\n            case 'Low': return 'success';\r\n            default: return 'default';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ py: 4, px: 2 }}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={4}>\r\n                <Typography variant=\"h4\" component=\"h1\">\r\n                    All Tasks\r\n                </Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={() => navigate('/tasks/new')}\r\n                >\r\n                    New Task\r\n                </Button>\r\n            </Box>\r\n\r\n            {/* Filters */}\r\n            <Paper sx={{ p: 2, mb: 3 }}>\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item xs={12} sm={4} md={3}>\r\n                        <TextField\r\n                            name=\"search\"\r\n                            value={filters.search}\r\n                            onChange={handleFilterChange}\r\n                            placeholder=\"Search tasks...\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} md={2}>\r\n                        <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                            <InputLabel>Status</InputLabel>\r\n                            <Select\r\n                                name=\"status\"\r\n                                value={filters.status}\r\n                                onChange={handleFilterChange}\r\n                                label=\"Status\"\r\n                            >\r\n                                <MenuItem value=\"\">All</MenuItem>\r\n                                <MenuItem value=\"To-Do\">To-Do</MenuItem>\r\n                                <MenuItem value=\"In Progress\">In Progress</MenuItem>\r\n                                <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} md={2}>\r\n                        <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                            <InputLabel>Priority</InputLabel>\r\n                            <Select\r\n                                name=\"priority\"\r\n                                value={filters.priority}\r\n                                onChange={handleFilterChange}\r\n                                label=\"Priority\"\r\n                            >\r\n                                <MenuItem value=\"\">All</MenuItem>\r\n                                <MenuItem value=\"Low\">Low</MenuItem>\r\n                                <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                                <MenuItem value=\"High\">High</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {loading ? (\r\n                <Box display=\"flex\" justifyContent=\"center\" py={4}>\r\n                    <CircularProgress />\r\n                </Box>\r\n            ) : (\r\n                <>\r\n                    {filteredTasks.length > 0 ? (\r\n                        <Paper>\r\n                            <TableContainer>\r\n                                <Table aria-label=\"tasks table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Title</TableCell>\r\n                                            <TableCell>Project</TableCell>\r\n                                            <TableCell>Status</TableCell>\r\n                                            <TableCell>Priority</TableCell>\r\n                                            <TableCell>Assignee</TableCell>\r\n                                            <TableCell>Due Date</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {filteredTasks\r\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            .map((task) => (\r\n                                                <TableRow\r\n                                                    key={task._id}\r\n                                                    hover\r\n                                                    onClick={() => navigate(`/tasks/${task._id}`)}\r\n                                                    sx={{ cursor: 'pointer' }}\r\n                                                >\r\n                                                    <TableCell>\r\n                                                        <Box display=\"flex\" alignItems=\"center\">\r\n                                                            {task.status === 'Completed' && (\r\n                                                                <CheckIcon color=\"success\" fontSize=\"small\" sx={{ mr: 1 }} />\r\n                                                            )}\r\n                                                            {task.title}\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell>{task.project?.name || 'No Project'}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={task.status}\r\n                                                            color={getStatusColor(task.status)}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={task.priority}\r\n                                                            color={getPriorityColor(task.priority)}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                    <TableCell>{task.assignee?.name || 'Unassigned'}</TableCell>\r\n                                                    <TableCell>\r\n                                                        {task.dueDate ? format(new Date(task.dueDate), 'MMM d, yyyy') : 'No date'}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                component=\"div\"\r\n                                count={filteredTasks.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n                        </Paper>\r\n                    ) : (\r\n                        <Paper sx={{ p: 4, textAlign: 'center' }}>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n                                No tasks found\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                                {tasks.length === 0\r\n                                    ? \"You don't have any tasks yet. Create your first task to get started.\"\r\n                                    : \"No tasks match your current filters. Try adjusting your search criteria.\"}\r\n                            </Typography>\r\n                            {tasks.length === 0 && (\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<AddIcon />}\r\n                                    onClick={() => navigate('/tasks/new')}\r\n                                >\r\n                                    Create First Task\r\n                                </Button>\r\n                            )}\r\n                        </Paper>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default TaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}