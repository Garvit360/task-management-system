{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Task Management System\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Grid, Typography, Paper, Button, Divider, List, ListItem, ListItemText, ListItemIcon, CircularProgress, Card, CardContent, CardHeader, Avatar } from '@mui/material';\nimport { Add as AddIcon, Assignment as TaskIcon, Folder as ProjectIcon, CheckCircle as CompletedIcon, Pending as PendingIcon, Schedule as ScheduleIcon } from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport { useProject } from '../context/ProjectContext';\nimport { useTask } from '../context/TaskContext';\nimport TaskCard from '../components/task/TaskCard';\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const {\n    projects,\n    fetchProjects,\n    loading: projectsLoading\n  } = useProject();\n  const {\n    tasks,\n    fetchTasksByUser,\n    loading: tasksLoading\n  } = useTask();\n  const [stats, setStats] = useState({\n    totalProjects: 0,\n    totalTasks: 0,\n    completedTasks: 0,\n    pendingTasks: 0,\n    upcomingTasks: 0\n  });\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchProjects();\n    if (user === null || user === void 0 ? void 0 : user._id) {\n      fetchTasksByUser(user._id);\n    }\n  }, [fetchProjects, fetchTasksByUser, user]);\n\n  // Calculate stats when data changes\n  useEffect(() => {\n    if (projects && tasks) {\n      const now = new Date();\n      const oneWeekFromNow = new Date();\n      oneWeekFromNow.setDate(now.getDate() + 7);\n      const completedTasks = tasks.filter(task => task.status === 'Completed').length;\n      const pendingTasks = tasks.filter(task => task.status !== 'Completed').length;\n      const upcomingTasks = tasks.filter(task => {\n        const dueDate = new Date(task.dueDate);\n        return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\n      }).length;\n      setStats({\n        totalProjects: projects.length,\n        totalTasks: tasks.length,\n        completedTasks,\n        pendingTasks,\n        upcomingTasks\n      });\n    }\n  }, [projects, tasks]);\n\n  // Handle create project button click\n  const handleCreateProject = () => {\n    navigate('/projects/new');\n  };\n\n  // Handle create task button click\n  const handleCreateTask = () => {\n    navigate('/tasks/new');\n  };\n\n  // Loading state\n  const isLoading = projectsLoading || tasksLoading;\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }));\n  }\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mb: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || 'User', \"!\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Here's an overview of your tasks and projects.\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    sx: {\n      mb: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 2,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    sx: {\n      bgcolor: 'primary.main',\n      mr: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ProjectIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, stats.totalProjects), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Total Projects\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 2,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    sx: {\n      bgcolor: 'success.main',\n      mr: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CompletedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, stats.completedTasks), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"Completed Tasks\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 2,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    sx: {\n      bgcolor: 'warning.main',\n      mr: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PendingIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, stats.pendingTasks), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, \"Pending Tasks\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"My Recent Tasks\",\n    action: /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 48\n        }\n      }),\n      onClick: handleCreateTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, \"New Task\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    sx: {\n      p: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, tasks.length === 0 ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 3,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 37\n    }\n  }, \"You don't have any tasks yet.\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 52\n      }\n    }),\n    sx: {\n      mt: 2\n    },\n    onClick: handleCreateTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, \"Create Your First Task\")) : /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, tasks.slice(0, 5).map(task => /*#__PURE__*/React.createElement(TaskCard, {\n    key: task._id,\n    task: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  })), tasks.length > 5 && /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      textAlign: 'center',\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"text\",\n    onClick: () => navigate('/tasks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 45\n    }\n  }, \"View All Tasks\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: {\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"My Projects\",\n    action: /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 48\n        }\n      }),\n      onClick: handleCreateProject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, \"New Project\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    sx: {\n      p: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, projects.length === 0 ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 3,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 37\n    }\n  }, \"You don't have any projects yet.\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 52\n      }\n    }),\n    sx: {\n      mt: 2\n    },\n    onClick: handleCreateProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, \"Create Your First Project\")) : /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, projects.slice(0, 5).map(project => {\n    var _project$members;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: project._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: () => navigate(`/projects/${project._id}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ProjectIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: project.name,\n      secondary: `${((_project$members = project.members) === null || _project$members === void 0 ? void 0 : _project$members.length) || 0} members`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Divider, {\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 45\n      }\n    }));\n  }), projects.length > 5 && /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => navigate('/projects'),\n    sx: {\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"View All Projects\",\n    primaryTypographyProps: {\n      color: 'primary'\n    },\n    sx: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 45\n    }\n  }))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Upcoming Deadlines\",\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      sx: {\n        bgcolor: 'error.main'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ScheduleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    sx: {\n      p: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, stats.upcomingTasks === 0 ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 3,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 37\n    }\n  }, \"No upcoming deadlines this week.\")) : /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 33\n    }\n  }, tasks.filter(task => {\n    const now = new Date();\n    const oneWeekFromNow = new Date();\n    oneWeekFromNow.setDate(now.getDate() + 7);\n    const dueDate = new Date(task.dueDate);\n    return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\n  }).slice(0, 5).map(task => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: task._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => navigate(`/tasks/${task._id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(TaskIcon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: task.title,\n    secondary: `Due: ${new Date(task.dueDate).toLocaleDateString()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 49\n    }\n  })))))))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Box","Grid","Typography","Paper","Button","Divider","List","ListItem","ListItemText","ListItemIcon","CircularProgress","Card","CardContent","CardHeader","Avatar","Add","AddIcon","Assignment","TaskIcon","Folder","ProjectIcon","CheckCircle","CompletedIcon","Pending","PendingIcon","Schedule","ScheduleIcon","useAuth","useProject","useTask","TaskCard","Dashboard","navigate","user","projects","fetchProjects","loading","projectsLoading","tasks","fetchTasksByUser","tasksLoading","stats","setStats","totalProjects","totalTasks","completedTasks","pendingTasks","upcomingTasks","_id","now","Date","oneWeekFromNow","setDate","getDate","filter","task","status","length","dueDate","handleCreateProject","handleCreateTask","isLoading","createElement","sx","display","justifyContent","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mb","variant","gutterBottom","name","color","container","spacing","item","xs","sm","md","alignItems","bgcolor","mr","title","action","size","startIcon","onClick","textAlign","mt","slice","map","key","project","_project$members","Fragment","button","primary","secondary","members","component","primaryTypographyProps","avatar","toLocaleDateString"],"sources":["C:/Users/Admin/Downloads/Task Management System/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    Paper,\r\n    Button,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    CircularProgress,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Avatar\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Assignment as TaskIcon,\r\n    Folder as ProjectIcon,\r\n    CheckCircle as CompletedIcon,\r\n    Pending as PendingIcon,\r\n    Schedule as ScheduleIcon\r\n} from '@mui/icons-material';\r\n\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useProject } from '../context/ProjectContext';\r\nimport { useTask } from '../context/TaskContext';\r\nimport TaskCard from '../components/task/TaskCard';\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    const { projects, fetchProjects, loading: projectsLoading } = useProject();\r\n    const { tasks, fetchTasksByUser, loading: tasksLoading } = useTask();\r\n    const [stats, setStats] = useState({\r\n        totalProjects: 0,\r\n        totalTasks: 0,\r\n        completedTasks: 0,\r\n        pendingTasks: 0,\r\n        upcomingTasks: 0\r\n    });\r\n\r\n    // Fetch data on component mount\r\n    useEffect(() => {\r\n        fetchProjects();\r\n        if (user?._id) {\r\n            fetchTasksByUser(user._id);\r\n        }\r\n    }, [fetchProjects, fetchTasksByUser, user]);\r\n\r\n    // Calculate stats when data changes\r\n    useEffect(() => {\r\n        if (projects && tasks) {\r\n            const now = new Date();\r\n            const oneWeekFromNow = new Date();\r\n            oneWeekFromNow.setDate(now.getDate() + 7);\r\n\r\n            const completedTasks = tasks.filter(task => task.status === 'Completed').length;\r\n            const pendingTasks = tasks.filter(task => task.status !== 'Completed').length;\r\n            const upcomingTasks = tasks.filter(task => {\r\n                const dueDate = new Date(task.dueDate);\r\n                return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\r\n            }).length;\r\n\r\n            setStats({\r\n                totalProjects: projects.length,\r\n                totalTasks: tasks.length,\r\n                completedTasks,\r\n                pendingTasks,\r\n                upcomingTasks\r\n            });\r\n        }\r\n    }, [projects, tasks]);\r\n\r\n    // Handle create project button click\r\n    const handleCreateProject = () => {\r\n        navigate('/projects/new');\r\n    };\r\n\r\n    // Handle create task button click\r\n    const handleCreateTask = () => {\r\n        navigate('/tasks/new');\r\n    };\r\n\r\n    // Loading state\r\n    const isLoading = projectsLoading || tasksLoading;\r\n    if (isLoading) {\r\n        return (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ mb: 4 }}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Welcome, {user?.name || 'User'}!\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    Here's an overview of your tasks and projects.\r\n                </Typography>\r\n            </Box>\r\n\r\n            {/* Stats Cards */}\r\n            <Grid container spacing={3} sx={{ mb: 4 }}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Paper sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ bgcolor: 'primary.main', mr: 2 }}>\r\n                            <ProjectIcon />\r\n                        </Avatar>\r\n                        <Box>\r\n                            <Typography variant=\"h5\">{stats.totalProjects}</Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Total Projects\r\n                            </Typography>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Paper sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ bgcolor: 'success.main', mr: 2 }}>\r\n                            <CompletedIcon />\r\n                        </Avatar>\r\n                        <Box>\r\n                            <Typography variant=\"h5\">{stats.completedTasks}</Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Completed Tasks\r\n                            </Typography>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Paper sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ bgcolor: 'warning.main', mr: 2 }}>\r\n                            <PendingIcon />\r\n                        </Avatar>\r\n                        <Box>\r\n                            <Typography variant=\"h5\">{stats.pendingTasks}</Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Pending Tasks\r\n                            </Typography>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n                {/* Recent Tasks */}\r\n                <Grid item xs={12} md={7}>\r\n                    <Card>\r\n                        <CardHeader\r\n                            title=\"My Recent Tasks\"\r\n                            action={\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    size=\"small\"\r\n                                    startIcon={<AddIcon />}\r\n                                    onClick={handleCreateTask}\r\n                                >\r\n                                    New Task\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        <Divider />\r\n                        <CardContent sx={{ p: 0 }}>\r\n                            {tasks.length === 0 ? (\r\n                                <Box sx={{ p: 3, textAlign: 'center' }}>\r\n                                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                        You don't have any tasks yet.\r\n                                    </Typography>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        startIcon={<AddIcon />}\r\n                                        sx={{ mt: 2 }}\r\n                                        onClick={handleCreateTask}\r\n                                    >\r\n                                        Create Your First Task\r\n                                    </Button>\r\n                                </Box>\r\n                            ) : (\r\n                                <Box sx={{ p: 2 }}>\r\n                                    {tasks.slice(0, 5).map(task => (\r\n                                        <TaskCard key={task._id} task={task} />\r\n                                    ))}\r\n                                    {tasks.length > 5 && (\r\n                                        <Box sx={{ textAlign: 'center', mt: 2 }}>\r\n                                            <Button\r\n                                                variant=\"text\"\r\n                                                onClick={() => navigate('/tasks')}\r\n                                            >\r\n                                                View All Tasks\r\n                                            </Button>\r\n                                        </Box>\r\n                                    )}\r\n                                </Box>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                {/* Projects and Upcoming Tasks */}\r\n                <Grid item xs={12} md={5}>\r\n                    {/* Recent Projects */}\r\n                    <Card sx={{ mb: 3 }}>\r\n                        <CardHeader\r\n                            title=\"My Projects\"\r\n                            action={\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    size=\"small\"\r\n                                    startIcon={<AddIcon />}\r\n                                    onClick={handleCreateProject}\r\n                                >\r\n                                    New Project\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        <Divider />\r\n                        <CardContent sx={{ p: 0 }}>\r\n                            {projects.length === 0 ? (\r\n                                <Box sx={{ p: 3, textAlign: 'center' }}>\r\n                                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                        You don't have any projects yet.\r\n                                    </Typography>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        startIcon={<AddIcon />}\r\n                                        sx={{ mt: 2 }}\r\n                                        onClick={handleCreateProject}\r\n                                    >\r\n                                        Create Your First Project\r\n                                    </Button>\r\n                                </Box>\r\n                            ) : (\r\n                                <List>\r\n                                    {projects.slice(0, 5).map(project => (\r\n                                        <React.Fragment key={project._id}>\r\n                                            <ListItem\r\n                                                button\r\n                                                onClick={() => navigate(`/projects/${project._id}`)}\r\n                                            >\r\n                                                <ListItemIcon>\r\n                                                    <ProjectIcon color=\"primary\" />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={project.name}\r\n                                                    secondary={`${project.members?.length || 0} members`}\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider component=\"li\" />\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                    {projects.length > 5 && (\r\n                                        <ListItem\r\n                                            button\r\n                                            onClick={() => navigate('/projects')}\r\n                                            sx={{ justifyContent: 'center' }}\r\n                                        >\r\n                                            <ListItemText\r\n                                                primary=\"View All Projects\"\r\n                                                primaryTypographyProps={{ color: 'primary' }}\r\n                                                sx={{ textAlign: 'center' }}\r\n                                            />\r\n                                        </ListItem>\r\n                                    )}\r\n                                </List>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    {/* Upcoming Tasks */}\r\n                    <Card>\r\n                        <CardHeader\r\n                            title=\"Upcoming Deadlines\"\r\n                            avatar={\r\n                                <Avatar sx={{ bgcolor: 'error.main' }}>\r\n                                    <ScheduleIcon />\r\n                                </Avatar>\r\n                            }\r\n                        />\r\n                        <Divider />\r\n                        <CardContent sx={{ p: 0 }}>\r\n                            {stats.upcomingTasks === 0 ? (\r\n                                <Box sx={{ p: 3, textAlign: 'center' }}>\r\n                                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                                        No upcoming deadlines this week.\r\n                                    </Typography>\r\n                                </Box>\r\n                            ) : (\r\n                                <List>\r\n                                    {tasks\r\n                                        .filter(task => {\r\n                                            const now = new Date();\r\n                                            const oneWeekFromNow = new Date();\r\n                                            oneWeekFromNow.setDate(now.getDate() + 7);\r\n                                            const dueDate = new Date(task.dueDate);\r\n                                            return task.status !== 'Completed' && dueDate > now && dueDate <= oneWeekFromNow;\r\n                                        })\r\n                                        .slice(0, 5)\r\n                                        .map(task => (\r\n                                            <React.Fragment key={task._id}>\r\n                                                <ListItem\r\n                                                    button\r\n                                                    onClick={() => navigate(`/tasks/${task._id}`)}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <TaskIcon color=\"error\" />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText\r\n                                                        primary={task.title}\r\n                                                        secondary={`Due: ${new Date(task.dueDate).toLocaleDateString()}`}\r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider component=\"li\" />\r\n                                            </React.Fragment>\r\n                                        ))}\r\n                                </List>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}